What happens when you initialize a repository? Why do you need it?
The directory becomes a repository by creating a file named .git.  This is will control and save all the things necessary for the directory to be a repository. 
How is the staging area different from the working directory and the depository? What value do you think it offers?
The staging area is a temporary place to add files to commit.  After you make a commit the staging area will be empty again. 
The value of this is you can decide to commit files in different groups or individually by having this.  
How can you use the staging area to make sure you have one commit per logical change?
I can use the staging area to only add one file at a time per commit, that way the changes I make will only have one logical change. 
I can also use the staging area to run git diff and make sure of what changes I am making. 
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When I make an experimental change.  
When I make a change any change that I am unsure of if it needs to stay with the master branch. 
How do the diagrams help you visualize the branch structure?
It helps me understand what commits are going to be shown by git log.
Shows me which branches are unreachable.  shows me the differences between each branch. 
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
All the changes in the two branches were incorporated into one new file commit. 
When one branch erased a line of code it gets erased. All additions stay and get merged. 
What are the pros and cons of Git's automatic merging vs. always doing merges manually?
Automatic merging is great for most code, because of the logic that is used, most of the new code will be fine.  This will save a lot of time. 
Manualy you only want to fix possible mistakes. not check everything in a merger.  But you will always end up having to do wome things manually.
 